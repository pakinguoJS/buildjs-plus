{
  "name": "json2css",
  "description": "Convert JSON into pre-processor ready CSS",
  "version": "5.2.2",
  "homepage": "https://github.com/twolfson/json2css",
  "author": {
    "name": "Todd Wolfson",
    "email": "todd@twolfson.com",
    "url": "http://twolfson.com/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/twolfson/json2css.git"
  },
  "bugs": {
    "url": "https://github.com/twolfson/json2css/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/twolfson/json2css/blob/master/LICENSE-MIT"
    }
  ],
  "main": "lib/json2css",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "dependencies": {
    "mustache": "~0.7.0",
    "underscore": "~1.4.2",
    "json-content-demux": "~0.1.2"
  },
  "devDependencies": {
    "grunt": "~0.4.5",
    "stylus": "~0.32.0",
    "less": "~1.3.3",
    "temporary": "0.0.5",
    "mocha": "~1.14.0",
    "css-validator": "~0.5.0",
    "express": "~3.4.8",
    "underscore": "~1.4.4",
    "eight-track-normalize-multipart": "~0.1.0",
    "eight-track": "~1.3.0",
    "grunt-contrib-jshint": "~0.10.0",
    "grunt-contrib-watch": "~0.6.1"
  },
  "keywords": [
    "json",
    "css",
    "sass",
    "scss",
    "stylus",
    "less",
    "sprite",
    "spritesheet",
    "layout"
  ],
  "readme": "# json2css [![Build status](https://travis-ci.org/twolfson/json2css.svg?branch=master)](https://travis-ci.org/twolfson/json2css)\n\nConvert JSON into pre-processor ready CSS.\n\nThis was initially designed for generating coordinates for a mapping of sprites on a spritesheet. However, it should be usable for anything related to dimensions/positions and CSS.\n\n## Getting Started\nInstall the module with: `npm install json2css`\n\n```js\n// Compilation\nvar json2css = require('json2css'),\n    obj = [\n      {'name': 'github', 'x': 0, 'y': 0, 'width': 10, 'height': 20, 'total_width': 80, 'total_height': 100, 'image': 'spritesheet.png'},\n      {'name': 'twitter', 'x': 10, 'y': 20, 'width': 20, 'height': 30, 'total_width': 80, 'total_height': 100, 'image': 'spritesheet.png'},\n      {'name': 'rss', 'x': 30, 'y': 50, 'width': 50, 'height': 50, 'image': 'spritesheet.png'}\n    ],\n    stylus = json2css(obj, {'format': 'stylus'});\n\n// Result (stylus)\n$github_x = 0px;\n$github_y = 0px;\n...\n$github = 0px 0px 0px 0px 10px 20px 80px 100px 'spritesheet.png';\n...\n$twitter = 10px 20px -10px -20px 20px 30px 80px 100px 'spritesheet.png';\n...\n$rss = 30px 50px -30px -50px 50px 50px 80px 100px 'spritesheet.png';\n...\nspriteWidth($sprite) {\n  width: $sprite[0];\n}\n...\nsprite($sprite) {\n  spriteImage($sprite)\n  spritePosition($sprite)\n  spriteWidth($sprite)\n  spriteHeight($sprite)\n}\n\n// Inside of your Stylus\n.githubLogo {\n  sprite($github);\n}\n```\n\n## Documentation\njson2css is a single function repo\n```js\n/**\n * @param {Object[]} input Object to convert into CSS\n * @param {String} input[*].name Name to use for the image\n * @param {Number} input[*].x Horizontal coordinate of top-left corner of image\n * @param {Number} input[*].y Vertical coordinate of top-left corner of image\n * @param {Number} input[*].width Horizontal length of image\n * @param {Number} input[*].height Vertical length of image\n * @param {Number} input[*].total_width Horizontal length of spritesheet\n * @param {Number} input[*].total_height Vertical length of spritesheet\n * @param {Number} input[*].image Path to image itself (used as a URL component)\n * @param {Object} [options] Options to convert JSON with\n * @param {String} [options.format=\"css\"] Format to output json in\n *   Format options can be found in the Templates section\n * @param {Mixed} [options.formatOpts={}] Options to pass through to the formatter\n */\n```\n\nNew templates can be added dynamically via\n```js\n// Processes template via function\njson2css.addTemplate(name, fn);\n\n// Processes template via mustache\njson2css.addMustacheTemplate(name, tmplStr);\n```\n\n### Templates\nThese are the various template options for `options.format`:\n\n#### `css`\nOuput CSS variables as CSS classes.\n\n**Options:**\n\n- cssClass `Function` - Override mapping for CSS selector\n    - `cssClass` should have signature `function (item) { return 'selector'; }`\n    - By default this will return `'.icon-' + item.name`\n    - It will receive `item` with all parameters designed for template\n\n**Example:**\n\n```css\n.icon-sprite1 {\n  background-image: url(nested/dir/spritesheet.png);\n  background-position: 0px 0px;\n  width: 10px;\n  height: 20px;\n}\n.icon-sprite2 {\n/* ... */\n```\n\n#### `json`\nOutput CSS variables in JSON format.\n\n**Example:**\n\n```js\n{\n    \"sprite1\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 10,\n        \"height\": 20,\n        \"total_width\": 80,\n        \"total_height\": 100,\n        \"image\": \"nested/dir/spritesheet.png\",\n        \"offset_x\": 0,\n        \"offset_y\": 0,\n        \"px\": {\n            \"x\": \"0px\",\n            \"y\": \"0px\",\n            \"offset_x\": \"0px\",\n            \"offset_y\": \"0px\",\n            \"height\": \"20px\",\n            \"width\": \"10px\",\n            \"total_height\": \"100px\",\n            \"total_width\": \"80px\"\n        },\n        \"escaped_image\": \"nested/dir/spritesheet.png\"\n    },\n    \"sprite2\": {\n    // ...\n```\n\n#### `json_array`\nOutput CSS variables as an array of objects.\n\n**Example:**\n\n```js\n[\n    {\n        \"name\": \"sprite1\",\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 10,\n        \"height\": 20,\n        \"total_width\": 80,\n        \"total_height\": 100,\n        \"image\": \"nested/dir/spritesheet.png\",\n        \"offset_x\": 0,\n        \"offset_y\": 0,\n        \"px\": {\n            \"x\": \"0px\",\n            \"y\": \"0px\",\n            \"offset_x\": \"0px\",\n            \"offset_y\": \"0px\",\n            \"height\": \"20px\",\n            \"width\": \"10px\",\n            \"total_height\": \"100px\",\n            \"total_width\": \"80px\"\n        },\n        \"escaped_image\": \"nested/dir/spritesheet.png\"\n    },\n    {\n        \"name\": \"sprite2\",\n        // ...\n```\n\n#### `less`\nOutput CSS variables as [LESS][] variables.\n\n**Options:**\n\n- functions `Boolean` - Flag to include mixins or not\n    - By default this is `true` (mixins will be included)\n\n**Example:**\n\n```less\n@sprite1-x: 0px;\n@sprite1-y: 0px;\n@sprite1-offset-x: 0px;\n@sprite1-offset-y: 0px;\n@sprite1-width: 10px;\n@sprite1-height: 20px;\n@sprite1-total-width: 80px;\n@sprite1-total-height: 100px;\n@sprite1-image: 'nested/dir/spritesheet.png';\n@sprite1: 0px 0px 0px 0px 10px 20px 80px 100px 'nested/dir/spritesheet.png';\n@sprite2-x: 10px;\n// ...\n```\n\n[LESS]: http://lesscss.org/\n\n### `sass`\nOutput CSS variables as [SASS][] variables.\n\n**Options:**\n\n- functions `Boolean` - Flag to include mixins or not\n    - By default this is `true` (mixins will be included)\n\n**Example:**\n\n```sass\n$sprite1-x: 0px\n$sprite1-y: 0px\n$sprite1-offset-x: 0px\n$sprite1-offset-y: 0px\n$sprite1-width: 10px\n$sprite1-height: 20px\n$sprite1-total-width: 80px\n$sprite1-total-height: 100px\n$sprite1-image: 'nested/dir/spritesheet.png'\n$sprite1: 0px 0px 0px 0px 10px 20px 80px 100px 'nested/dir/spritesheet.png'\n$sprite2-x: 10px\n// ...\n```\n\n[SASS]: http://sass-lang.com/\n\n### `scss`\nOutput CSS variables as [SCSS][] variables.\n\n**Options:**\n\n- functions `Boolean` - Flag to include mixins or not\n    - By default this is `true` (mixins will be included)\n\n**Example:**\n\n```scss\n$sprite1-x: 0px;\n$sprite1-y: 0px;\n$sprite1-offset-x: 0px;\n$sprite1-offset-y: 0px;\n$sprite1-width: 10px;\n$sprite1-height: 20px;\n$sprite1-total-width: 80px;\n$sprite1-total-height: 100px;\n$sprite1-image: 'nested/dir/spritesheet.png';\n$sprite1: 0px 0px 0px 0px 10px 20px 80px 100px 'nested/dir/spritesheet.png';\n$sprite2-x: 10px;\n// ...\n```\n\n[SCSS]: http://sass-lang.com/\n\n### `scss_maps`\nOutput CSS variables as [SCSS][] maps variables.\n\n**Options:**\n\n- functions `Boolean` - Flag to include mixins or not\n    - By default this is `true` (mixins will be included)\n\n**Example:**\n\n```scss\n$sprite1: (\n  x: 0px,\n  y: 0px,\n  offset_x: 0px,\n  offset_y: 0px,\n  width: 10px,\n  height: 20px,\n  total_width: 80px,\n  total_height: 100px,\n  image: 'nested/dir/spritesheet.png'\n);\n$sprite2: (\n// ...\n```\n\n### `stylus`\nOutput CSS variables as [Stylus][] variables.\n\n**Options:**\n\n- functions `Boolean` - Flag to include mixins or not\n    - By default this is `true` (mixins will be included)\n\n**Example:**\n\n```scss\n$sprite1_x = 0px;\n$sprite1_y = 0px;\n$sprite1_offset_x = 0px;\n$sprite1_offset_y = 0px;\n$sprite1_width = 10px;\n$sprite1_height = 20px;\n$sprite1_total_width = 80px;\n$sprite1_total_height = 100px;\n$sprite1_image = 'nested/dir/spritesheet.png';\n$sprite1 = 0px 0px 0px 0px 10px 20px 80px 100px 'nested/dir/spritesheet.png';\n$sprite2_x = 10px;\n// ...\n```\n\n[Stylus]: http://learnboost.github.io/stylus/\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint via [grunt](https://github.com/cowboy/grunt) and test via `npm test`.\n\n## Donating\nSupport this project and [others by twolfson][gittip] via [gittip][].\n\n[![Support via Gittip][gittip-badge]][gittip]\n\n[gittip-badge]: https://rawgithub.com/twolfson/gittip-badge/master/dist/gittip.png\n[gittip]: https://www.gittip.com/twolfson/\n\n## Unlicense\nAs of Sep 08 2013, Todd Wolfson has released this repository and its contents to the public domain.\n\nIt has been released under the [UNLICENSE][].\n\n[UNLICENSE]: UNLICENSE\n\nPrior to Sep 08 2013, this repository and its contents were licensed under the [MIT license][].\n\n[MIT license]: https://github.com/twolfson/json2css/blob/e601307209b75faa48cb65388a17e0047b561aa0/LICENSE-MIT\n",
  "readmeFilename": "README.md",
  "_id": "json2css@5.2.2",
  "_from": "json2css@^5.2.1"
}
