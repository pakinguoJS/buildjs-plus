/**
 *
 *
 */

'use strict';

var FS = require('fs');
var PATH = require('path');
var colors = require('colors');

var bjs = {};


/**
 * 路由
 * @return {[type]} [description]
 */
bjs.run = function() {
	// read config & exec
	var cwd = process.cwd();
	var confPath = PATH.join(cwd, 'bjs.conf.js');
	if (FS.existsSync(confPath)) {
		eval(FS.readFileSync(confPath, 'utf8'));
	}

	var argvs = process.argv;
	switch (argvs[2]) {
		case 'init':
			require('bjs-init/init.js')(argvs[3]);
			break;
		case 'wc':
			if(!FS.existsSync(confPath)){
				console.log('[Error]: '.red + 'bjs.conf.js is required!');
				return;
			}
			require('bjs.complier.js').watchChokidar(bjs.config);
			break;
		case 'wi':
			if(!FS.existsSync(confPath)){
				console.log('[Error]: '.red + 'bjs.conf.js is required!');
				return;
			}
			require('bjs.complier.js').watchInotify(bjs.config);
			break;
	}
}


/**
 * 配置
 * @param {string} key 配置项键值
 * @param {string||object} value 配置项的值
 */
bjs.set = function(key, value) {
		if (!(key in bjs.config)) {
			return;
		}

		bjs.config[key] = value;
	}
	// 配置项
bjs.config = {

	// 项目采用的模块加载类型，仅支持cmd、amd、none（目前仅完成cmd）
	ctype: 'cmd',

	// 项目模块源路径
	src: './src',

	// 项目模块默认部署路径
	dst: '../resource/src',

	// 默认部署的路径，即是dst的父级目录
	dest: '../resource',

	// tpl输出的路径，适合smarty
	view: '../views',

	// 是否使用smarty，重定义view层tpl的路径
	filter: true,

	// 开启手动打包
	pkg: false,

	// 需要排除打包的模块映射（如果开启手动打包，则手动打包的配置会忽略此项）
	pkgExclude: {},

	// css是否需要合并
	cssImport: true,

	// css是否需要压缩
	cssMinify: true,

	// js是否需要uglify
	uglify: false,

	// i18n
	i18n: false,

	// plugins
	plugins: false
}


bjs.help = function(){
	console.log('help');
}


module.exports = bjs;