/**
 *
 *
 */

'use strict';

var PATH = require('path');
var FS = require('fs');
var CWD = process.cwd();

var watcher = require(PATH.join(__dirname, 'bjs-watch/lib/watch.js'));


/**
 * 
 * @param  {[type]} conf [description]
 * @return {[type]}      [description]
 */
function watchChokidar(conf) {
	// 需要忽略几种类型的文件：
	// 1、以.开头的隐藏文件
	// 2、bjs.conf.js文件
	// 3、bjs项目记录的相关文件夹 _bjs_
	watcher.watchA(CWD, function(type, path) {

		// 先将路径配置为grunt.file接收的数据格式
		var cwd = PATH.join(__dirname, conf.src);
		var src = PATH.relative(cwd, path);


		// step 1: 更新文件列表的最后修改时间，确保不是由chokidar开启监听时产生的变更
		var mtimeFile = PATH.join(CWD, '_bjs_/mtime.json');
		var STEP1 = require(PATH.join(__dirname, 'bjs-command/flow-record/task.js'));
		var ret = STEP1({
			files: [{
				expand: true,
				cwd: cwd,
				src: src
			}]
		}, {
			output: mtimeFile
		});


		// step 2: copy
		if(ret){
			console.log(path)
		}
		
	}, /[\/\\]\.|(bjs\.conf\.js)|_bjs_/);
}



/**
 * [watchInotify description]
 * @param  {[type]} conf [description]
 * @return {[type]}      [description]
 */
function watchInotify(conf) {

}



module.exports = {
	watchChokidar: watchChokidar,
	watchInotify: watchInotify
}