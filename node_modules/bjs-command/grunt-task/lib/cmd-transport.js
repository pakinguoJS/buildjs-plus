/**
 * @description 初始化项目目录结构，以生成bjs.config.js为唯一校验，若存在该配置文件，则不执行初始脚本
 * 
 * @author pakinguo
 * 
 */

'use strict';

var FS = require('fs');
var PATH = require('path');


var __grunt_path = PATH.join(__dirname, '../');


function disposeFiles(files, base, dest){
	var f4css	= [];
	var f4js	= [];
	for(var i = 0, l = files.length; i < l; i++){
		// 只存在.css或.js后缀
		if(/\.css$/.test(files[i])){
			f4css.push({
				expand: true,
				cwd: base,
				src: PATH.join(files[i],'').replace(PATH.join(base, '/'), ''),
				dest: dest
			})
		}else{
			f4js.push({
				expand: true,
				cwd: base,
				src: PATH.join(files[i],'').replace(PATH.join(base, '/'), ''),
				dest: dest
			})
		}
	}

	return [f4css, f4js];
}


function makeGruntfile(files, base, dest, alias){
	var list = disposeFiles(files, base, dest);
	var _files = '{\
		transport4css: {\
			options: {\
				debug: false,\
				parsers: {\
					".css": [css2jsParser]\
				}\
			},\
			files: {file0}\
		},\
		transport4js: {\
            options: {\
                debug: false,\
                alias: {alias}\
            },\
            files: {file1}\
        }\
	}'
	.replace('{file0}', JSON.stringify(list[0]))
	.replace('{file1}', JSON.stringify(list[1]))
	.replace('{alias}', JSON.stringify(alias || {}))

	var output = '\
        module.exports = function(grunt){\
			var style = require("grunt-cmd-transport").style.init(grunt);\
			var css2jsParser = style.css2jsParser;\
			var jsParser = require("grunt-cmd-transport").script.init(grunt).jsParser;\
            grunt.initConfig({\
                pkg: grunt.file.readJSON("package.json"),\
                transport: {files}\
            });\
            grunt.loadNpmTasks("grunt-cmd-transport");\
            grunt.registerTask("default", ["transport"]);\
        };'.replace('{files}', _files);

    FS.writeFileSync(PATH.join(__grunt_path,'Gruntfile.js'), output, 'utf-8');
}


function exec(files, base, dest, alias, callback){
	makeGruntfile(files, base, dest, alias);

	require('child_process').exec('cd ' + __grunt_path + ' && grunt --force', function(error, stdout, stderr) {
        if (error !== null) {
            console.log('Transport exec error: ' + error);
            // return;
        }
		console.log(stdout);
		
        typeof callback === 'function' ? callback() : null;
    });
}


module.exports = exec;
